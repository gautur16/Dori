@model DoriVLN.Models.ViewModels.FileViewModel

@{
    ViewBag.Title = "Create file";
}
@{ List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "Javascript",
        Value = "javascript",
    });
    listItems.Add(new SelectListItem
    {
        Text = "C#",
        Value = "csharp",
    });
    listItems.Add(new SelectListItem
    {
        Text = "C++",
        Value = "c_cpp",
    });
    listItems.Add(new SelectListItem
    {
        Text = "Java",
        Value = "java",
    });
    listItems.Add(new SelectListItem
    {
        Text = "Python",
        Value = "python",
    });
    listItems.Add(new SelectListItem
    {
        Text = "Ruby",
        Value = "ruby",
    });
    listItems.Add(new SelectListItem
    {
        Text = "PHP",
        Value = "php",
    });
}

<div class="row">
    <div class="col-md-3"></div>
    <div class="col-md-6">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4 align="center">Create a new file for your project:</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.fileType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.fileType, listItems)
                        @Html.ValidationMessageFor(model => model.fileType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.folderName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.folderName, (List<SelectListItem>)ViewBag.selectList, "--Select--")
                        @Html.ValidationMessageFor(model => model.folderName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                        <a href="~/Folder/Overview" class="btn btn-default">Cancel</a>
                       <!-- <button class="btn btn-default" data-dismiss="modal">Cancel</button> -->
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="col-md-3"></div>
</div>